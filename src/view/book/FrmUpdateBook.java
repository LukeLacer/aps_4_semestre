/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.book;

import control.CtrAuthors;
import control.CtrBooks;
import control.CtrBooksAuthors;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Author;
import model.Book;
import model.BooksAuthors;

public class FrmUpdateBook extends javax.swing.JFrame {
    CtrBooks ctrBook;
    Book book;
    
    CtrAuthors ctrAuthor;
    Author author;
    
    CtrBooksAuthors ctrBooksAuthors;
    BooksAuthors booksAuthors;
    private int IdSelectedAuthor;
    /**
     * Creates new form FrmUpdateBook
     */
    public FrmUpdateBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblISBN = new javax.swing.JLabel();
        lbTitle = new javax.swing.JLabel();
        lblPublisherId = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        jTfISBN = new javax.swing.JTextField();
        jTfTitle = new javax.swing.JTextField();
        jTfPublisherId = new javax.swing.JTextField();
        jTfPrice = new javax.swing.JTextField();
        jBUpdate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jBNewAuthor = new javax.swing.JButton();
        jBDeleteAuthor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Titulo", "Id Editora", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lblISBN.setText("ISBN");

        lbTitle.setText("Titulo");

        lblPublisherId.setText("Id Editora");

        lblPrice.setText("Preço");

        jTfISBN.setEnabled(false);

        jTfTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTfTitleActionPerformed(evt);
            }
        });

        jBUpdate.setText("Atualizar");
        jBUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBUpdateMouseClicked(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(50);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Autores");

        jBNewAuthor.setText("Novo Autor");
        jBNewAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNewAuthorActionPerformed(evt);
            }
        });

        jBDeleteAuthor.setText("Excluir Autor");
        jBDeleteAuthor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBDeleteAuthorMouseClicked(evt);
            }
        });
        jBDeleteAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteAuthorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1)
                        .addContainerGap(215, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBUpdate))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblISBN)
                                        .addGap(28, 28, 28)
                                        .addComponent(jTfISBN, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPublisherId)
                                            .addComponent(lbTitle)
                                            .addComponent(lblPrice))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTfPrice)
                                            .addComponent(jTfTitle)
                                            .addComponent(jTfPublisherId))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBDeleteAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBNewAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblISBN)
                    .addComponent(jTfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTitle)
                    .addComponent(jTfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPublisherId)
                    .addComponent(jTfPublisherId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice)
                    .addComponent(jTfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBNewAuthor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBDeleteAuthor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTfTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTfTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTfTitleActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ctrBooksAuthors = new CtrBooksAuthors();
        booksAuthors = new BooksAuthors();
        
        ctrAuthor = new CtrAuthors();
        author = new Author();
        
        ctrBook = new CtrBooks();
        book = new Book();
        this.listBooks();
    }//GEN-LAST:event_formWindowOpened

    private void jBUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBUpdateMouseClicked
        book = new Book();
        book.setISBN(jTfISBN.getText());
        book.setTitle(jTfTitle.getText());
        book.setPrice(Double.parseDouble(jTfPrice.getText()));
        book.setPublisherID(Integer.parseInt(jTfPublisherId.getText()));        
        if (ctrBook.alterarBook(book) == 1) {
            this.listBooks();
            JOptionPane.showMessageDialog(null, "Livro  atualizado com sucesso!!");
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar o livro");
        }
    }//GEN-LAST:event_jBUpdateMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        this.listBooksAuthors(source.getModel().getValueAt(row, 0)+"");
        jTfISBN.setText(source.getModel().getValueAt(row, 0)+"");
        jTfTitle.setText(source.getModel().getValueAt(row, 1)+"");
        jTfPublisherId.setText(source.getModel().getValueAt(row, 2)+"");
        jTfPrice.setText(source.getModel().getValueAt(row, 3)+"");
    }//GEN-LAST:event_jTable1MouseClicked

    private void jBNewAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNewAuthorActionPerformed
        FrmNewBookAuthor novoLivroAutor = new FrmNewBookAuthor();
        novoLivroAutor.jTfISBN.setText(jTfISBN.getText());
        novoLivroAutor.setVisible(true);
        novoLivroAutor.setLocationRelativeTo(this);
    }//GEN-LAST:event_jBNewAuthorActionPerformed

    private void jBDeleteAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBDeleteAuthorActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        this.IdSelectedAuthor = Integer.parseInt(source.getModel().getValueAt(row, 0)+"");
    }//GEN-LAST:event_jTable2MouseClicked

    private void jBDeleteAuthorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBDeleteAuthorMouseClicked
        booksAuthors = new BooksAuthors();
        booksAuthors.setAuthorID(this.IdSelectedAuthor);
        booksAuthors.setIsbn(jTfISBN.getText());
        if (ctrBooksAuthors.excluirBooksAuthor(booksAuthors) == 1) {
            this.listBooksAuthors(jTfISBN.getText());
            JOptionPane.showMessageDialog(null, "Autor  retirado do livro com sucesso!!");
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível retirar o autor do livro");
        }
    }//GEN-LAST:event_jBDeleteAuthorMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if(jTfISBN.getText() != "") {
            listBooksAuthors(jTfISBN.getText());
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void listBooks(){
        DefaultTableModel tableModelBooks = (DefaultTableModel) jTable1.getModel();
        tableModelBooks.setRowCount(0);
        List listBook = new ArrayList();
        listBook = ctrBook.carregarBooks();
        if (listBook != null && !listBook.isEmpty()) {
            Iterator i = listBook.iterator();
            while (i.hasNext()) {
                book = (Book) i.next();
                tableModelBooks.addRow(new Object[] {book.getISBN(), book.getTitle(),book.getPublisherID(),book.getPrice() });
            }
        }else{
            JOptionPane.showMessageDialog(null, "Nenhum Autor disponível para listar!!");
        }
    }
    
    public void listBooksAuthors(String isbn){
        DefaultTableModel tableModelBooksAuthors = (DefaultTableModel) jTable2.getModel();
        tableModelBooksAuthors.setRowCount(0);
        List listBookAuthor = new ArrayList();
        listBookAuthor = ctrBooksAuthors.carregarBookAuthors(isbn);
        if (listBookAuthor != null && !listBookAuthor.isEmpty()) {
            Iterator i = listBookAuthor.iterator();
            while (i.hasNext()) {
                booksAuthors = (BooksAuthors) i.next();
                author = (Author) ctrAuthor.carregarAuthor(booksAuthors.getAuthorID());
                tableModelBooksAuthors.addRow(new Object[] {booksAuthors.getAuthorID(), author.getFname()});
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Autor disponível para listar!!");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUpdateBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDeleteAuthor;
    private javax.swing.JButton jBNewAuthor;
    private javax.swing.JButton jBUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTfISBN;
    private javax.swing.JTextField jTfPrice;
    private javax.swing.JTextField jTfPublisherId;
    private javax.swing.JTextField jTfTitle;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lblISBN;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblPublisherId;
    // End of variables declaration//GEN-END:variables
}
